name: "tpch-single-test"
description: "test tpc-h once in main branch and new branch"
inputs:
    status:
        description: "status of last test"
        default: "unfinished"
outputs:
    status:
        description: "status of this test"
        value: ${{ steps.get.outputs.status }}

runs:
    using: "composite"
    steps:
        - name: Start Old IGinX
          if: inputs.status != 'ok'
          shell: bash
          run: |
              cd IGinX/core/target/iginx-core-${VERSION}
              pwd
              export IGINX_HOME=$PWD
              echo "IGinX home path: $IGINX_HOME"
              cd ..
              chmod +x iginx-core-${VERSION}/sbin/start_iginx.sh
              nohup iginx-core-${VERSION}/sbin/start_iginx.sh > ../../iginx-${VERSION}.log 2>&1 &
              if ss -tuln | grep -q ":6888 "; then
                echo "Port 6888 is open."
              else
                echo "Port 6888 is not open."
              fi

        - name: Run TPCH Test on Old IGinX
          if: inputs.status != 'ok'
          shell: bash
          run: |
              cp -f test/src/test/resources/tpch/runtimeInfo/failedQueryIds.txt IGinX/test/src/test/resources/tpch/runtimeInfo/failedQueryIds.txt
              cp -f test/src/test/resources/tpch/runtimeInfo/iterationTimes.txt IGinX/test/src/test/resources/tpch/runtimeInfo/iterationTimes.txt
              cd IGinX
              if ss -tuln | grep -q ":6888 "; then
                echo "Port 6888 is open."
              else
                echo "Port 6888 is not open."
              fi
              mvn test -q -Dtest=TPCHRegressionMainIT -DfailIfNoTests=false -P-format

        - name: Show Old IGinX log
          if: always()
          shell: bash
          run: cat IGinX/iginx-*.log

        - name: Stop Old IGinX
          if: inputs.status != 'ok'
          uses: ./.github/actions/iginxRunner
          with:
              version: ${VERSION}
              if-stop: "true"

        - name: Start New IGinX
          if: inputs.status != 'ok'
          uses: ./.github/actions/iginxRunner

        - name: Run Regression Test on New IGinX
          if: inputs.status != 'ok'
          shell: bash
          run: |
              cp -f IGinX/test/src/test/resources/tpch/runtimeInfo/oldTimeCosts.txt test/src/test/resources/tpch/runtimeInfo/oldTimeCosts.txt
              mvn test -q -Dtest=TPCHRegressionNewIT -DfailIfNoTests=false -P-format

        - name: Show New IGinX log
          if: always()
          shell: bash
          run: cat iginx-*.log

        - name: Stop New IGinX
          if: inputs.status != 'ok'
          uses: ./.github/actions/iginxRunner
          with:
              version: ${VERSION}
              if-stop: "true"

        - name: Get Test Result
          id: get
          shell: bash
          run: |
              STATUS=$(cat test/src/test/resources/tpch/runtimeInfo/status.txt)
              echo "status=$STATUS" >> $GITHUB_OUTPUT
