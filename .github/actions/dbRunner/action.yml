name: "db-runner"
description: "db runner"
inputs:
    DB-name:
        description: "DB name"
        required: false
        default: IoTDB12
    IoTDB12-ports:
        description: "IoTDB12 ports"
        required: false
        default: 6667
    InfluxDB-ports:
        description: "InfluxDB ports"
        required: false
        default: 8086
    MongoDB-ports:
        description: "MongoDB ports"
        required: false
        default: 27017
    MySQL-ports:
        description: "MySQL ports"
        required: false
        default: 3306
    PostgreSQL-ports:
        description: "PostgreSQL ports"
        required: false
        default: 5432
    Redis-ports:
        description: "Redis ports"
        required: false
        default: 6379
    Dameng-ports:
        description: "Dameng ports"
        required: false
        default: 5236
    VectorDB-ports:
        description: "VectorDB ports"
        required: false
        default: 19530
    Neo4j-ports:
        description: "Neo4j ports"
        required: false
        default: 7687
    Oracle-ports:
        description: "Oracle ports"
        required: false
        default: 1521

runs:
    using: "composite" # Mandatory parameter
    steps:
        - if: runner.os == 'Windows'
          uses: Vampire/setup-wsl@v5
          with:
            distribution: Ubuntu-22.04
            wsl-conf: |
              [wsl2]
              networkingMode=mirrored

        - if: inputs.DB-name=='InfluxDB' || inputs.DB-name=='Mix-IoTDB12-InfluxDB'
          name: Setup DB
          uses: ./.github/actions/setup/influxdb

        - if: inputs.DB-name=='InfluxDB' || inputs.DB-name=='Mix-IoTDB12-InfluxDB'
          name: Run DB
          shell: bash
          run: |
              if [ "$RUNNER_OS" == "Linux" ]; then
                chmod +x "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/influxdb.sh"
                "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/influxdb.sh" ${{ inputs.InfluxDB-ports }}
              elif [ "$RUNNER_OS" == "Windows" ]; then
                chmod +x "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/influxdb_windows.sh"
                "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/influxdb_windows.sh" ${{ inputs.InfluxDB-ports }}
              elif [ "$RUNNER_OS" == "macOS" ]; then
                chmod +x "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/influxdb_macos.sh"
                "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/influxdb_macos.sh" ${{ inputs.InfluxDB-ports }}
              else
                echo "$RUNNER_OS is not supported"
                exit 1
              fi

        - if: inputs.DB-name=='IoTDB12' || inputs.DB-name=='Mix-IoTDB12-InfluxDB'
          name: Setup DB
          uses: ./.github/actions/setup/iotdb12

        - if: (inputs.DB-name=='IoTDB12' || inputs.DB-name=='Mix-IoTDB12-InfluxDB') && (runner.os == 'Linux' || runner.os == 'macOS')
          name: Run DB
          shell: bash
          run: |
              java -version
              which java
              if [ "$RUNNER_OS" == "Linux" ]; then
                chmod +x "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/iotdb12.sh"
                "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/iotdb12.sh" ${{ inputs.IoTDB12-ports }}
              elif [ "$RUNNER_OS" == "macOS" ]; then
                chmod +x "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/iotdb12_macos.sh"
                "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/iotdb12_macos.sh" ${{ inputs.IoTDB12-ports }}
              else
                echo "$RUNNER_OS is not supported"
                exit 1
              fi

        - if: (inputs.DB-name=='IoTDB12' || inputs.DB-name=='Mix-IoTDB12-InfluxDB') && (runner.os == 'Windows')
          name: Run DB
          shell: wsl-bash {0}
          run: |
              wsl bash "${GITHUB_WORKSPACE}/.github/scripts/dataSources/startup/iotdb12_windows.sh" ${{ inputs.IoTDB12-ports }}

        - if: inputs.DB-name=='MongoDB'
          name: Setup DB
          uses: ./.github/actions/setup/mongodb

        - if: inputs.DB-name=='MongoDB'
          name: Run DB
          uses: ./.github/actions/service/mongodb
          with:
              stop: false
              clean: false
              start: true
              ports: ${{ inputs.MongoDB-ports }}

        - if: inputs.DB-name=='Redis'
          name: Setup DB
          uses: ./.github/actions/setup/redis

        - if: inputs.DB-name=='Redis'
          name: Run DB
          uses: ./.github/actions/service/redis
          with:
              stop: false
              clean: false
              start: true
              ports: ${{ inputs.Redis-ports }}

        - if: inputs.DB-name=='PostgreSQL'
          name: Setup DB
          uses: ./.github/actions/setup/postgresql

        - if: inputs.DB-name=='PostgreSQL'
          name: Run DB
          uses: ./.github/actions/service/postgresql
          with:
              stop: false
              clean: false
              start: true
              ports: ${{ inputs.PostgreSQL-ports }}

        - if: inputs.DB-name=='MySQL'
          name: Setup DB
          uses: ./.github/actions/setup/mysql

        - if: inputs.DB-name == 'MySQL'
          name: Start MySQL Service
          uses: ./.github/actions/service/mysql
          with:
              ports: ${{ inputs.MySQL-ports }}

        - if: inputs.DB-name=='VectorDB'
          name: Run Milvus DB
          uses: ./.github/actions/service/vectordb
          with:
              stop: false
              clean: false
              start: true
              ports: ${{ inputs.VectorDB-ports }}

        - if: inputs.DB-name=='Dameng'
          name: Setup DB
          uses: ./.github/actions/setup/dameng

        - if: inputs.DB-name=='Dameng'
          name: Start Dameng Service
          uses: ./.github/actions/service/dameng
          with:
              start: true
              ports: ${{ inputs.Dameng-ports }}

        - if: inputs.DB-name=='Neo4j'
          name: Setup Neo4j DB
          uses: ./.github/actions/setup/neo4j

        - if: inputs.DB-name=='Neo4j'
          name: Run Neo4j DB
          uses: ./.github/actions/service/neo4j
          with:
              stop: false
              clean: false
              start: true
              ports: ${{ inputs.Neo4j-ports }}

        - if: inputs.DB-name=='Oracle'
          name: Setup DB
          uses: ./.github/actions/setup/oracle

        - if: inputs.DB-name == 'Oracle'
          id: oracleService
          name: Start Oracle Service
          uses: ./.github/actions/service/oracle
          with:
              ports: ${{ inputs.Oracle-ports }}
