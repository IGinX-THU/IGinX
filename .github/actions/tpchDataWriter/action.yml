name: "tpch-data-writer"
description: "insert data before test tpc-h"
inputs:
    DB-name:
        description: "DB name"
        required: false
        default: IoTDB12

runs:
    using: "composite" # Mandatory parameter
    steps:
        - name: Start New IGinX
          uses: ./.github/actions/iginxRunner

        - name: Insert Data and Register UDF
          shell: bash
          run: mvn test -q -Dtest=TPCHDataGeneratorIT -DfailIfNoTests=false -P-format

        - name: Show New IGinX log
          if: always()
          shell: bash
          run: cat iginx-*.log

        - name: Stop New IGinX
          uses: ./.github/actions/iginxRunner
          with:
              version: ${VERSION}
              if-stop: "true"

        - name: Copy .tbl files
          if: inputs.DB-name == 'FileSystem' || inputs.DB-name == 'Parquet'
          shell: bash
          run: |
              mkdir IGinX/tpc
              cp -r tpc/* IGinX/tpc/

        - name: Start Old IGinX
          if: inputs.DB-name == 'FileSystem' || inputs.DB-name == 'Parquet'
          shell: bash
          run: |
              cd IGinX/core/target/iginx-core-${VERSION}
              pwd
              export IGINX_HOME=$PWD
              echo "IGinX home path: $IGINX_HOME"
              cd ..
              chmod +x iginx-core-${VERSION}/sbin/start_iginx.sh
              nohup iginx-core-${VERSION}/sbin/start_iginx.sh > ../../iginx-${VERSION}.log 2>&1 &

        - name: Insert Data Again (for FileSystem and Parquet)
          if: inputs.DB-name == 'FileSystem' || inputs.DB-name == 'Parquet'
          shell: bash
          run: |
              mvn test -q -Dtest=TPCHDataGeneratorIT#insertTmpTable -DfailIfNoTests=false -P-format

        - name: Show Old IGinX log
          if: inputs.DB-name == 'FileSystem' || inputs.DB-name == 'Parquet'
          shell: bash
          run: cat IGinX/iginx-*.log

        - name: Stop Old IGinX
          if: inputs.DB-name == 'FileSystem' || inputs.DB-name == 'Parquet'
          uses: ./.github/actions/iginxRunner
          with:
              version: ${VERSION}
              if-stop: "true"
