name: "Install_Free-thread_Python"
description: "Install Free-thread Python"

runs:
    using: "composite"
    steps:
        - name: Set Python variables
          id: set-python-vars
          shell: bash
          run: |
              if [ "$RUNNER_OS" == "Windows" ]; then
                echo "PYTHON_INSTALLER_URL=https://www.python.org/ftp/python/3.13.0/python-3.13.0-amd64.exe" >> $GITHUB_ENV
                echo "PYTHON_INSTALLER_PATH=python-installer.exe" >> $GITHUB_ENV
                echo "CACHE_KEY=python-windows-3.13.0" >> $GITHUB_ENV
              elif [ "$RUNNER_OS" == "macOS" ]; then
                echo "PYTHON_INSTALLER_URL=https://www.python.org/ftp/python/3.13.0/python-3.13.0-macos11.pkg" >> $GITHUB_ENV
                echo "PYTHON_INSTALLER_PATH=python-installer.pkg" >> $GITHUB_ENV
                echo "CACHE_KEY=python-macos-3.13.0" >> $GITHUB_ENV
              fi

        - name: Restore Python installer
          if: runner.os!='Linux'
          id: restore-cache-python
          uses: actions/cache/restore@v3
          with:
              path: ${{ env.PYTHON_INSTALLER_PATH }}
              key: ${{ env.CACHE_KEY }}

        - name: Download Python installer
          if: steps.restore-cache-python.outputs.cache-hit != 'true' && runner.os=='Windows'
          shell: powershell
          run: |
              Invoke-WebRequest -Uri $env:PYTHON_INSTALLER_URL -OutFile $env:PYTHON_INSTALLER_PATH

        # have to wait until installation finishes
        - if: runner.os=='Windows'
          name: Setup Python3.13 on Windows
          shell: powershell
          run: |
              Start-Process -FilePath "$(Join-Path -Path $PWD -ChildPath $env:PYTHON_INSTALLER_PATH)" -ArgumentList "/quiet","Include_freethreaded=1" -Wait
              $pythonPath = "$env:LocalAppData\Programs\Python\Python313"
              Get-ChildItem $pythonPath
              $env:Path += ";$pythonPath"
              echo "$pythonPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
              echo "FT_PYTHON_PATH=$pythonPath" | Out-File -FilePath $env:GITHUB_ENV -Append
              python3.13t -VV

        - if: runner.os=='Linux'
          name: Setup Python3.13 on Linux
          shell: bash
          run: |
              sudo add-apt-repository ppa:deadsnakes
              sudo apt-get update
              sudo apt-get install python3.13-nogil python3.13-dev
              python3.13t -VV

        - name: Download Python installer
          if: steps.restore-cache-python.outputs.cache-hit != 'true' && runner.os=='macOS'
          shell: bash
          run: |
              curl -o $PYTHON_INSTALLER_PATH $PYTHON_INSTALLER_URL

        - if: runner.os=='macOS'
          name: Setup Python3.13 on MacOS
          shell: bash
          run: |
              cat > ./choicechanges.plist <<EOF
              <?xml version="1.0" encoding="UTF-8"?>
              <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
              <plist version="1.0">
              <array>
                  <dict>
                      <key>attributeSetting</key>
                      <integer>1</integer>
                      <key>choiceAttribute</key>
                      <string>selected</string>
                      <key>choiceIdentifier</key>
                      <string>org.python.Python.PythonTFramework-3.13</string>
                  </dict>
              </array>
              </plist>
              EOF
              sudo installer -pkg ./$PYTHON_INSTALLER_PATH \
                  -applyChoiceChangesXML ./choicechanges.plist \
                  -target /
              python3.13t -VV
              export PATH="$PATH:/Library/Frameworks/PythonT.framework/Versions/3.13/bin"

        - name: Cache Python installer
          if: runner.os!='Linux' && steps.restore-cache-python.outputs.cache-hit != 'true'
          id: cache-python
          uses: actions/cache/save@v3
          with:
              path: ${{ env.PYTHON_INSTALLER_PATH }}
              key: ${{ env.CACHE_KEY }}

        - name: Install pip
          if: runner.os=='Linux'
          shell: bash
          run: |
              curl -O https://bootstrap.pypa.io/get-pip.py
              sudo python3.13t get-pip.py

        # pandas 2.2.3 cannot be directly installed on windows yet. use dev wheel file
        - name: Install dependencies for tests
          shell: bash
          run: |
              curl -L -O https://github.com/IGinX-THU/IGinX-resources/raw/refs/heads/main/resources/python/pandas-3.0.0.dev0+1654.g32a97a969a-cp313-cp313t-win_amd64.whl
              ls -l
              if [ "$RUNNER_OS" == "Windows" ]; then
               python3.13t -m pip install numpy thrift pemjax
               python3.13t -m pip install pandas*.whl
              else
               sudo python3.13t -m pip install pandas==2.2.3 numpy thrift pemjax
              fi
