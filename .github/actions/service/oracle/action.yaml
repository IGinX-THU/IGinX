name: "oracle"
inputs:
  ports:
    description: The server port to listen on.
    default: "1521"
    required: false
  version:
    description: oracle db version.
    default: "oracle23"
    required: false
runs:
  using: "composite"
  steps:
    - name: Create Config for dameng docker compose
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        for port in ${{ inputs.ports }}; do
          mkdir -p $port/volumes/oradata
          cp -f docker/oracle/docker-compose.yml $port/docker-compose.yml
          sed -i"" -e "s/1521:1521/$port:1521/g" $port/docker-compose.yml
          sed -i"" -e "s/container_name: oracle23/container_name: ${{ inputs.version }}-$port/g" $port/docker-compose.yml
        done
        echo "docker-compose.yml created successfully"

    - if: runner.os == 'Linux' || runner.os == 'macOS'
      name: Start Oracle container
      shell: bash
      run: |
        for port in ${{ inputs.ports }}; do
          sudo chmod -R 777 $port/volumes/oradata
          sudo nohup docker compose -f $port/docker-compose.yml up -d
        done

    - if: runner.os == 'Linux' || runner.os == 'macOS'
      name: Verify Oracle Database is running
      id: oracleContainer
      shell: bash
      run: |
        for port in ${{ inputs.ports }}; do
          while true; do
            log_output=$(docker logs "${{ inputs.version }}-$port" 2>&1 | grep -i "DATABASE IS READY TO USE" || true)
            if [ -z "$log_output" ]; then
              echo "oracle service not started, retry in 10 seconds..."
              docker logs --tail 10 ${{ inputs.version }}-$port
              sleep 10
            else
              echo "oracle service started."
              break
            fi
          done
        done
        docker ps

    - if: runner.os == 'Windows'
      name: Start Oracle container
      shell: wsl-bash {0}
      run: |
        for port in ${{ inputs.ports }}; do
          sudo chmod -R 777 $port/volumes/oradata
          sudo nohup docker compose -f $port/docker-compose.yml up -d
        done

    - if: runner.os == 'Windows'
      name: Verify Oracle Database is running
      id: oracleContainerWin
      shell: wsl-bash {0}
      run: |
        for port in ${{ inputs.ports }}; do
          while true; do
          log_output=$(docker logs "${{ inputs.version }}-$port" 2>&1 | grep -i "DATABASE IS READY TO USE" || true)
          if [ -z "$log_output" ]; then
            echo "${{ inputs.version }}-$port service not started, retry in 10 seconds..."
            docker logs --tail 10 ${{ inputs.version }}-$port
            sleep 10
          else
            echo "${{ inputs.version }}-$port service started."
            break
          fi
          done
        done
        docker ps