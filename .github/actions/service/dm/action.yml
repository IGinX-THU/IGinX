name: "dm"
description: "stop, clean and start dm in order"
inputs:
    ports:
        description: The server port to listen on.
        default: "5236"
        required: false
    version:
        description: dm db version.
        default: "dm8"
        required: false
runs:
    using: "composite"
    steps:
        - if: runner.os == 'Linux' || runner.os == 'macOS'
          name: Download DM Database Docker image and Run DM Database container
          shell: bash
          run: |
              wget https://github.com/IGinX-THU/IGinX-resources/raw/refs/heads/main/resources/dm8_20241022_x86_rh6_64_single.tar
              docker load -i dm8_20241022_x86_rh6_64_single.tar
              for port in ${{ inputs.ports }}; do
                docker run -d -p $port:5236 --restart=always --name=${{ inputs.version }}-$port --privileged=true -e LD_LIBRARY_PATH=/opt/dmdbms/bin -e PAGE_SIZE=16 -e EXTENT_SIZE=32 -e LOG_SIZE=1024 -e UNICODE_FLAG=1  -e INSTANCE_NAME=dm8_test -v /opt/data:/opt/dmdbms/data dm8_single:dm8_20241022_rev244896_x86_rh6_64
              done
        - if: runner.os == 'Linux' || runner.os == 'macOS'
          name: Verify dm Database is running
          id: dmContainer
          shell: bash
          run: |
              docker ps
              sleep 10
              for port in ${{ inputs.ports }}; do
                while true; do
                  log_output=$(docker logs "${{ inputs.version }}-$port" 2>&1 | grep -i "Database started successfully" || true)
                  if [ -z "$log_output" ]; then
                    echo "'Database started successfully' not found in the logs, retrying in 100 seconds..."
                    docker logs --tail 10 ${{ inputs.version }}-$port
                    sleep 30
                  else
                    echo "'Database started successfully.' found in the logs, continuing."
                    break
                  fi
                done
              done
        - if: runner.os == 'Windows'
          name: Download dm Database Docker image and Run DM Database container
          shell: wsl-run {0}
          run: |
              for port in ${{ inputs.ports }}; do
                wsl docker run -d -p $port:5236 --restart=always --name=${{ inputs.version }}-$port --privileged=true -e LD_LIBRARY_PATH=/opt/dmdbms/bin -e PAGE_SIZE=16 -e EXTENT_SIZE=32 -e LOG_SIZE=1024 -e UNICODE_FLAG=1  -e INSTANCE_NAME=dm8_test -v /mnt/c/opt/data:/opt/dmdbms/data dm8_single:dm8_20241022_rev244896_x86_rh6_64
              done
        - if: runner.os == 'Windows'
          name: Verify dm Database is running
          id: dmContainerWin
          shell: wsl-run {0}
          run: |
              docker ps
              sleep 10
              for port in ${{ inputs.ports }}; do
                while true; do
                  log_output=$(docker logs "${{ inputs.version }}-$port" 2>&1 | grep -i "Database started successfully" || true)
                  if [ -z "$log_output" ]; then
                    echo "'Database started successfully' not found in the logs, retrying in 100 seconds..."
                    docker logs --tail 10 ${{ inputs.version }}-$port
                    sleep 30
                  else
                    echo "'Database started successfully.' found in the logs, continuing."
                    break
                  fi
                done
              done
