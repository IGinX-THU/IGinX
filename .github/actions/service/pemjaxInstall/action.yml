name: "install-pemjax"
description: "install pemjax using python3.13t"
inputs:
    pemja-version:
        description: "version of pemja"
        required: false
        default: "0.1.0"

runs:
    using: "composite"
    steps:
        - name: Set Python variables
          shell: bash
          run: |
              echo "PEMJAX_HOME=pemjax-${{ inputs.pemja-version }}-${{ runner.os}}" >> $GITHUB_ENV
              echo "PEMJAX_SOURCE_PATH=pemjax-${{ inputs.pemja-version }}.tar.gz" >> $GITHUB_ENV

        # not using cache here because only version can be cache-key, but will make it hard to test without version change
        # pandas will support python 3.13 soon, there's no need to bother with caching
        - name: Download Pemjax source
          shell: bash
          run: |
              curl -L -o ${{ env.PEMJAX_SOURCE_PATH }} https://github.com/IGinX-THU/IGinX-resources/raw/main/resources/python/pemjax-${{ inputs.pemja-version }}.tar.gz
              curl -L -O https://github.com/IGinX-THU/IGinX-resources/raw/refs/heads/main/resources/python/pandas-3.0.0.dev0+1654.g32a97a969a-cp313-cp313t-win_amd64.whl
              ls -l

        # when file changes, cache changes
        - name: Restore pemja wheel
          id: restore-wheel
          uses: actions/cache/restore@v3
          with:
              path: ${{ env.PEMJAX_HOME }}/pemjax-${{ inputs.pemja-version }}/dist
              key: ${{ runner.os }}-pemjax-${{ inputs.pemja-version }}-${{ hashFiles(env.PEMJAX_SOURCE_PATH) }}

        # only needed in Linux
        - name: Install pip
          if: runner.os=='Linux'
          shell: bash
          run: |
              curl -O https://bootstrap.pypa.io/get-pip.py
              sudo python3.13t get-pip.py

        - name: Build wheel
          if: steps.restore-wheel.outputs.cache-hit!='true'
          shell: bash
          run: |
              if [ "$RUNNER_OS" == "Windows" ]; then
                python3.13t -m pip install setuptools wheel find-libpython build
              else
                sudo python3.13t -m pip install setuptools wheel find-libpython build
              fi
              mkdir -p $PEMJAX_HOME
              tar -xzf ${{ env.PEMJAX_SOURCE_PATH }} -C $PEMJAX_HOME
              ls
              cd $PEMJAX_HOME/pemjax-${{ inputs.pemja-version }}
              python3.13t setup.py bdist_wheel

        - name: Install pemjax wheel
          shell: bash
          run: |
              if [ "$RUNNER_OS" == "Windows" ]; then
                python3.13t -m pip install $PEMJAX_HOME/pemjax-${{ inputs.pemja-version }}/dist/*.whl --no-clean
              else
                sudo python3.13t -m pip install $PEMJAX_HOME/pemjax-${{ inputs.pemja-version }}/dist/*.whl --no-clean
              fi
              python3.13t -m pip freeze list

        # pandas 2.2.3 cannot be directly installed on windows yet. use dev wheel file
        - name: Install dependencies for tests
          shell: bash
          run: |
              if [ "$RUNNER_OS" == "Windows" ]; then
                python3.13t -m pip install numpy thrift
                python3.13t -m pip install pandas*.whl
              else
                sudo python3.13t -m pip install pandas==2.2.3 numpy thrift
              fi

        - uses: actions/upload-artifact@v3
          with:
              name: ${{ runner.os }}-pemjax-wheel
              path: ${{ env.PEMJAX_HOME }}/pemjax-${{ inputs.pemja-version }}/dist/*.whl

        - name: Cache wheel
          id: cache-wheel
          uses: actions/cache/save@v3
          with:
              path: ${{ env.PEMJAX_HOME }}/pemjax-${{ inputs.pemja-version }}/dist
              key: ${{ runner.os }}-pemjax-${{ inputs.pemja-version }}-${{ hashFiles(env.PEMJAX_SOURCE_PATH) }}
