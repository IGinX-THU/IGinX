name: "Capacity-Expansion-Test"
on:
    pull_request:
        types: [opened, reopened]
        branches:
            - main
env:
    VERSION: 0.6.0-SNAPSHOT
    FUNCTEST: NewSessionIT,SQLCompareIT,TagIT,RestIT,TransformIT,UDFIT,RestAnnotationIT,SQLSessionIT,SQLSessionPoolIT,SessionV2IT,SessionIT,SessionPoolIT,CompactionIT,TimePrecisionIT
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    DB-CE:
        timeout-minutes: 60
        strategy:
            fail-fast: false
            matrix:
                java: [8]
                python-version: ["3.7"]
                os: [ubuntu-latest, macos-latest]
                DB-name: ["IoTDB12", "InfluxDB", "Redis", "PostgreSQL"]
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v2
            - name: Environment dependence
              uses: ./.github/actions/dependence
              with:
                  python-version: ${{ matrix.python-version }}
                  java: ${{ matrix.java }}

            - name: Run ZooKeeper
              uses: ./.github/actions/zookeeperRunner

            - name: Run DB
              uses: ./.github/actions/dbRunner
              with:
                  DB-name: ${{ matrix.DB-name }}

            - name: Install IGinX with Maven
              shell: bash
              run: |
                  mvn clean package -DskipTests -P passFormat -q

            # 第 1 阶段测试开始==========================================
            - name: Prepare CapExp environment oriHasDataExpHasData
              uses: ./.github/actions/capacityExpansionUnionTest
              with:
                  version: ${VERSION}
                  DB-name: ${{ matrix.DB-name }}
                  Test-Way: oriHasDataExpHasData

            - name: oriHasDataExpHasData IT
              run: |
                  mvn test -q -Dtest=${{ matrix.DB-name }}CapacityExpansionIT#oriHasDataExpHasData -DfailIfNoTests=false -P passFormat
                  mvn test -q -Dtest=${FUNCTEST} -DfailIfNoTests=false -P passFormat

            # 第 2 阶段测试开始==========================================
            - name: Prepare CapExp environment oriNoDataExpNoData
              uses: ./.github/actions/capacityExpansionUnionTest
              with:
                  version: ${VERSION}
                  DB-name: ${{ matrix.DB-name }}
                  Test-Way: oriNoDataExpNoData

            - name: oriNoDataExpNoData IT
              run: |
                  mvn test -q -Dtest=${{ matrix.DB-name }}CapacityExpansionIT#oriNoDataExpNoData -DfailIfNoTests=false -P passFormat
                  mvn test -q -Dtest=${FUNCTEST} -DfailIfNoTests=false -P passFormat

            # 第 3 阶段测试开始==========================================
            - name: Prepare CapExp environment oriHasDataExpNoData
              uses: ./.github/actions/capacityExpansionUnionTest
              with:
                  version: ${VERSION}
                  DB-name: ${{ matrix.DB-name }}
                  Test-Way: oriHasDataExpNoData

            - name: oriHasDataExpNoData IT
              run: |
                  mvn test -q -Dtest=${{ matrix.DB-name }}CapacityExpansionIT#oriHasDataExpNoData -DfailIfNoTests=false -P passFormat
                  mvn test -q -Dtest=${FUNCTEST} -DfailIfNoTests=false -P passFormat

            # 第 4 阶段测试开始==========================================
            - name: Prepare CapExp environment oriNoDataExpHasData
              uses: ./.github/actions/capacityExpansionUnionTest
              with:
                  version: ${VERSION}
                  DB-name: ${{ matrix.DB-name }}
                  Test-Way: oriNoDataExpHasData

            - name: oriNoDataExpHasData IT
              run: |
                  mvn test -q -Dtest=${{ matrix.DB-name }}CapacityExpansionIT#oriNoDataExpHasData -DfailIfNoTests=false -P passFormat
                  mvn test -q -Dtest=${FUNCTEST} -DfailIfNoTests=false -P passFormat

            - name: Show IGinX log
              if: always()
              shell: bash
              run: |
                  cat iginx.log

            - uses: codecov/codecov-action@v1
              with:
                  file: ./**/target/site/jacoco/jacoco.xml
                  name: codecov

    Parquet-Capacity-Expansion-ds:
        strategy:
            fail-fast: false
            matrix:
                java: [8]
                python-version: ["3.7"]
                os: [ubuntu-latest, macos-latest]
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v2
            - name: Environment dependence
              uses: ./.github/actions/dependence
              with:
                  python-version: ${{ matrix.python-version }}
                  java: ${{ matrix.java }}

            - name: Cache Maven packages
              uses: actions/cache@v2.1.5
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2

            - name: Run ZooKeeper
              uses: ./.github/actions/zookeeperRunner

            - name: Run DB
              uses: ./.github/actions/dbRunner
              with:
                  version: Parquet

            - name: Install IGinX with Maven
              shell: bash
              run: |
                  mvn clean package -DskipTests -P passFormat -q

            - name: Write history Data
              run: |
                  mvn test -q -Dtest=ParquetHistoryDataGeneratorTest -DfailIfNoTests=false -P passFormat
                  sleep 10

            - name: Start IGinX
              uses: ./.github/actions/iginxRunner
              with:
                  version: ${VERSION}

            - name: ParquetCapacityExpansionIT
              run: mvn test -q -Dtest=ParquetCapacityExpansionIT -DfailIfNoTests=false -P passFormat

            - name: Show IGinX log
              if: always()
              shell: bash
              run: |
                  cat iginx.log

            - uses: codecov/codecov-action@v1
              with:
                  file: ./**/target/site/jacoco/jacoco.xml
                  name: codecov
