name: "TPC-H Regression Test"

on:
    workflow_call:
        inputs:
            java-matrix:
                description: "The java version to run the test on"
                type: string
                required: false
                default: '["8"]'
            python-matrix:
                description: "The python version to run the test on"
                type: string
                required: false
                default: '["3.9"]'
            os-matrix:
                description: "The operating system to run the test on"
                type: string
                required: false
                default: '["ubuntu-latest", "macos-13", "windows-latest"]'
            metadata-matrix:
                description: "The metadata to run the test on"
                type: string
                required: false
                default: '["zookeeper", "etcd"]'
            db-matrix:
                description: "The database to run the test on"
                type: string
                required: false
                default: '["FileSystem", "IoTDB12", "InfluxDB", "PostgreSQL", "Redis", "MongoDB", "Parquet", "MySQL"]'

jobs:
    TPC-H-Test:
        timeout-minutes: 35
        strategy:
            fail-fast: false
            matrix:
                java: ${{ fromJSON(inputs.java-matrix) }}
                python-version: ${{ fromJSON(inputs.python-matrix) }}
                os: ${{ fromJSON(inputs.os-matrix) }}
                metadata: ${{ fromJSON(inputs.metadata-matrix) }}
                DB-name: ${{ fromJSON(inputs.db-matrix) }}
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4
            - name: Environment dependence
              uses: ./.github/actions/dependence
              with:
                  python-version: ${{ matrix.python-version }}
                  java: ${{ matrix.java }}

            - name: Display System Info
              shell: bash
              run: |
                  echo "Operating System: $(uname -a 2>/dev/null || ver)"
                  echo "Architecture: $(uname -m 2>/dev/null || echo %PROCESSOR_ARCHITECTURE%)"
                  echo "Java Version:"
                  java -version
                  echo "Python Version:"
                  python --version
                  echo "CPU Info:"
                  if [ "$(uname)" = "Linux" ]; then
                    lscpu
                  elif [ "$(uname)" = "Darwin" ]; then
                    sysctl -n machdep.cpu.brand_string
                  else
                    wmic cpu get name
                  fi
                  echo "Memory Info:"
                  if [ "$(uname)" = "Linux" ]; then
                    free -h
                  elif [ "$(uname)" = "Darwin" ]; then
                    vm_stat
                  else
                    systeminfo | findstr /C:"Total Physical Memory"
                  fi

            - name: Generate TPC-H Data
              shell: bash
              run: |
                  chmod +x "${GITHUB_WORKSPACE}/.github/scripts/benchmarks/tpch.sh"
                  "${GITHUB_WORKSPACE}/.github/scripts/benchmarks/tpch.sh"

            - name: Run ZooKeeper
              uses: ./.github/actions/zookeeperRunner

            - name: Run DB
              uses: ./.github/actions/dbRunner
              with:
                  DB-name: ${{ matrix.DB-name }}

            - name: Switch to Old Version
              shell: bash
              run: |
                  cd ..
                  mkdir "new"
                  mkdir "new/IGinX"
                  cp -r "IGinX" "new/IGinX"
                  cd "IGinX"
                  mkdir "new"
                  mv "../new" "new"
                  mkdir "old"
                  cd old
                  git clone https://github.com/IGinX-THU/IGinX.git
                  cd IGinX
                  pwd

            - name: Install IGinX with Maven
              shell: bash
              run: |
                  mvn clean package -DskipTests -P-format -q

            - name: Change IGinX config
              uses: ./.github/actions/confWriter
              with:
                  DB-name: ${{ matrix.DB-name }}
                  Set-Filter-Fragment-OFF: "true"
                  Root-Dir-Path: "old/IGinX"

            - name: Start Old IGinX
              uses: ./.github/actions/iginxRunner
              with:
                  version: ${VERSION}
                  Root-Dir-Path: "old/IGinX"

            - name: Run Regression Test on Old IGinX
              if: always()
              shell: bash
              run: |
                  mvn test -q -Dtest=TPCHRegressionIT -DfailIfNoTests=false -P-format

            - name: Stop ZooKeeper
              uses: ./.github/actions/zookeeperRunner
              with:
                  if-stop: "true"

            - name: Stop Old IGinX
              uses: ./.github/actions/iginxRunner
              with:
                  version: ${VERSION}
                  if-stop: "true"

            - name: Rerun ZooKeeper
              uses: ./.github/actions/zookeeperRunner
              with:
                  if-rerun: "true"

            - name: Switch to New Version
              shell: bash
              run: |
                  cd "../../new/IGinX"

            - name: Change IGinX config
              uses: ./.github/actions/confWriter
              with:
                  DB-name: ${{ matrix.DB-name }}
                  Set-Filter-Fragment-OFF: "true"
                  Root-Dir-Path: "new/IGinX"

            - name: Start New IGinX
              uses: ./.github/actions/iginxRunner
              with:
                  version: ${VERSION}
                  Root-Dir-Path: "new/IGinX"

            - name: Run Regression Test on New IGinX
              if: always()
              shell: bash
              run: |
                  mvn test -q -Dtest=TPCHRegressionIT -DfailIfNoTests=false -P-format
