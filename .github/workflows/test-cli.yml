name: "Union Database Test"

on:
    workflow_call:
        inputs:
            java-matrix:
                description: "The java version to run the test on"
                type: string
                required: false
                default: '["8"]'
            python-matrix:
                description: "The python version to run the test on"
                type: string
                required: false
                default: '["3.9"]'
            os-matrix:
                description: "The operating system to run the test on"
                type: string
                required: false
                default: '["ubuntu-latest", "macos-13", "windows-latest"]'
            metadata-matrix:
                description: "The metadata to run the test on"
                type: string
                required: false
                default: '["zookeeper", "etcd"]'
            db-matrix:
                description: "The database to run the test on"
                type: string
                required: false
                default: '["FileSystem", "IoTDB12", "InfluxDB", "PostgreSQL", "Redis", "MongoDB", "Parquet", "MySQL"]'

jobs:
    udf-path:
        timeout-minutes: 20
        strategy:
            fail-fast: false
            matrix:
                java: ${{ fromJSON(inputs.java-matrix) }}
                python-version: ${{ fromJSON(inputs.python-matrix) }}
                os: ${{ fromJSON(inputs.os-matrix) }}
                metadata: ${{ fromJSON(inputs.metadata-matrix) }}
                DB-name: ${{ fromJSON(inputs.db-matrix) }}
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4
            - name: Environment dependence
              uses: ./.github/actions/dependence
              with:
                  python-version: ${{ matrix.python-version }}
                  java: ${{ matrix.java }}

            - name: Install IGinX with Maven
              shell: bash
              run: |
                  mvn clean package -DskipTests -P-format

            - name: Run Metadata
              uses: ./.github/actions/metadataRunner
              with:
                  metadata: ${{ matrix.metadata }}

            - name: Run DB
              uses: ./.github/actions/dbRunner
              with:
                  DB-name: ${{ matrix.DB-name }}

            - name: Change IGinX config
              uses: ./.github/actions/confWriter
              with:
                  DB-name: ${{ matrix.DB-name }}
                  Set-Filter-Fragment-OFF: "true"
                  Metadata: ${{ matrix.metadata }}

            # start udf path test first to avoid being effected
            - name: Start IGinX
              uses: ./.github/actions/iginxRunner
              with:
                  if-test-udf: "true"

            - name: Run UDF path test
              if: always()
              shell: bash
              run: |
                  mvn test -Dtest=UDFPathIT -Dsurefire.failIfNoSpecifiedTests=false -P-format
                  if [ "$RUNNER_OS" == "Linux" ]; then
                    chmod +x "${GITHUB_WORKSPACE}/.github/scripts/test/cli/test_py_register.sh"
                    "${GITHUB_WORKSPACE}/.github/scripts/test/cli/test_py_register.sh" ${VERSION}
                  elif [ "$RUNNER_OS" == "Windows" ]; then
                    chmod +x "${GITHUB_WORKSPACE}/.github/scripts/test/cli/test_py_register_windows.sh"
                    "${GITHUB_WORKSPACE}/.github/scripts/test/cli/test_py_register_windows.sh" ${VERSION}
                  elif [ "$RUNNER_OS" == "macOS" ]; then
                    chmod +x "${GITHUB_WORKSPACE}/.github/scripts/test/cli/test_py_register_macos.sh"
                    "${GITHUB_WORKSPACE}/.github/scripts/test/cli/test_py_register_macos.sh" ${VERSION}
                  fi

            - name: Show IGinX log
              if: always()
              shell: bash
              run: |
                  cat iginx-*.log

    export-file:
        timeout-minutes: 20
        strategy:
            fail-fast: false
            matrix:
                java: ${{ fromJSON(inputs.java-matrix) }}
                python-version: ${{ fromJSON(inputs.python-matrix) }}
                os: ${{ fromJSON(inputs.os-matrix) }}
                metadata: ${{ fromJSON(inputs.metadata-matrix) }}
                DB-name: ${{ fromJSON(inputs.db-matrix) }}
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4
            - name: Environment dependence
              uses: ./.github/actions/dependence
              with:
                  python-version: ${{ matrix.python-version }}
                  java: ${{ matrix.java }}

            - name: Install IGinX with Maven
              shell: bash
              run: |
                  mvn clean package -DskipTests -P-format

            - name: Run Metadata
              uses: ./.github/actions/metadataRunner
              with:
                  metadata: ${{ matrix.metadata }}

            - name: Run DB
              uses: ./.github/actions/dbRunner
              with:
                  DB-name: ${{ matrix.DB-name }}

            - name: Change IGinX config
              uses: ./.github/actions/confWriter
              with:
                  DB-name: ${{ matrix.DB-name }}
                  Metadata: ${{ matrix.metadata }}

            - name: Start IGinX
              uses: ./.github/actions/iginxRunner

            - name: set client test context
              uses: ./.github/actions/context
              with:
                  DB-name: ${{ matrix.DB-name }}
                  shell: client-before

            # large image export only tested in FileSystem and Parquet
            - name: Test Client Export File
              if: always()
              shell: bash
              run: |
                  if [[ "${{ matrix.DB-name }}" == "FileSystem" || "${{ matrix.DB-name }}" == "Parquet" ]]; then
                      mvn test -Dtest=ExportFileIT -Dsurefire.failIfNoSpecifiedTests=false -P-format
                  else
                      mvn test -Dtest=ExportFileIT#checkExportByteStream -Dsurefire.failIfNoSpecifiedTests=false -P-format
                      mvn test -Dtest=ExportFileIT#checkExportCsv -Dsurefire.failIfNoSpecifiedTests=false -P-format
                  fi

            - name: Show IGinX log
              if: always()
              shell: bash
              run: |
                  cat iginx-*.log

    import-file:
        timeout-minutes: 20
        strategy:
            fail-fast: false
            matrix:
                java: ${{ fromJSON(inputs.java-matrix) }}
                python-version: ${{ fromJSON(inputs.python-matrix) }}
                os: ${{ fromJSON(inputs.os-matrix) }}
                metadata: ${{ fromJSON(inputs.metadata-matrix) }}
                DB-name: ${{ fromJSON(inputs.db-matrix) }}
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4
            - name: Environment dependence
              uses: ./.github/actions/dependence
              with:
                  python-version: ${{ matrix.python-version }}
                  java: ${{ matrix.java }}

            - name: Install IGinX with Maven
              shell: bash
              run: |
                  mvn clean package -DskipTests -P-format

            - name: Run Metadata
              uses: ./.github/actions/metadataRunner
              with:
                  metadata: ${{ matrix.metadata }}

            - name: Run DB
              uses: ./.github/actions/dbRunner
              with:
                  DB-name: ${{ matrix.DB-name }}

            - name: Change IGinX config
              uses: ./.github/actions/confWriter
              with:
                  DB-name: ${{ matrix.DB-name }}
                  Metadata: ${{ matrix.metadata }}

            - name: Start IGinX
              uses: ./.github/actions/iginxRunner

            - name: set client test context
              uses: ./.github/actions/context
              with:
                  shell: client-after

            - name: Test Client Import File
              if: always()
              shell: bash
              run: |
                  mvn test -Dtest=ImportFileIT -Dsurefire.failIfNoSpecifiedTests=false -P-format

            - name: Show IGinX log
              if: always()
              shell: bash
              run: |
                  cat iginx-*.log
