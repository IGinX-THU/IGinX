# This file is used to configure the accessType of the files in IGinX.
#
#
# Configuration format:
# =====================
#
# Note:
#
#   1. If there is conflict between key, the first one will be used.
#   2. charset should be same as the system property `file.encoding`.
#   3. The configuration file is in the format of `properties`.
#   4. The key-value pair is separated by `=`.
#   5. The key is case-sensitive.
#
# Variable:
#
#   The value of the key can contain variables, which will be replaced by the
#   real value. Including:
#
#   * `${<name>}`: get the value of this configuration file.
#   * `${env:<name>}`: get the value of the environment variable.
#   * `${sys:<name>}`: get the value of the system property.
#
#   more details:
#     https://commons.apache.org/proper/commons-configuration/userguide/howto_basicfeatures.html#Variable_Interpolation
#
#
# Refresh Interval:
# =================
#
#   IGinX will refresh the accessType configuration file at a regular interval.
#   The refresh interval can be configured by the `refreshInterval` key.
#   The value is the interval in milliseconds. The default value is 5000.
#
#
# File access rule:
# =================
#
# The file accessType rule is used to configure the accessType of the files in
# IGinX. The rule can be configured to allow or deny the file to be
# read/write/execute. The rule can be applied to the specific user and module.
#
# Note:
#
#   1. The rules are applied in the order of the configuration file.
#   2. The first rule that matches the file path will be used.
#   3. If there is no read/write/execute for specific file when checking the
#      rule, try to apply the next rule.
#   4. If there is no rule that matches the file path, the default accessType
#      will be used. Default accessType is `true`.
#
# Rule Format:
#
#   A rule is represented by 4 configuration items with the same prefix:
#
#     <user>.<module>[<priority>].include = <pathPattern>
#     <user>.<module>[<priority>].read = true/false
#     <user>.<module>[<priority>].write = true/false
#     <user>.<module>[<priority>].execute = true/false
#
#   where:
#     * `<user>` is the user name that the rule applies to. Specific users:
#       + `default` means the default user.
#         - All users first match the rules of specific users, if no match,
#           then match the rules of the default user.
#       + `root` means the root user.
#     * `<module>` is the module name that the rule applies to.
#       + `default` means the default module.
#         - All modules first match the rules of specific modules, if no match,
#           then match the rules of the default module.
#       + `transformer` means the transformer module.
#       + `udf` means the udf module.
#       + `driver` means the storage module.
#     * `<priority>` is the priority of the rule.
#       + When checking the rules, check rules in order of priority from small
#         to large, and the first matched rule takes effect.
#       + The priority is an unsigned integer. The larger the value, the lower
#         priority.
#       + If no rule is matched, the access is allowed by default.
#     * `include` means the file path pattern that the rule applies to.
#       + this property is required.
#     * `read/write/execute` means whether file can be read/written/executed.
#       + this property is optional.
#       + if read not set, the rule will be ignored when checking the read.
#         Write and execute are the same.
#     * `<pathPattern>` is the pattern of the absolute file path. It can be:
#       - `glob:<pattern>`: matches the file path with the glob pattern.
#       - `regex:<pattern>`: matches the file path with the regex pattern.
#       more details:
#         https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getPathMatcher-java.lang.String-
#
#   Example:
#
#     root.default[0].include=glob:**
#     root.default[0].write=true
#     root.default[0].execute=true
#
#     default.udf[0].include=glob:**.py
#     default.udf[0].execute=true
#
#     default.default[0].include=glob:**
#     default.default[0].write=false
#     default.default[0].execute=false
#
#   In this example, all users can read all files. Only the root user can write
#   and execute all files. The other users only can execute python files in udf
#   module.
#
#
# Please Note:
# ============
#
#   Only the default user is supported currently.
#   ---------------------------------------------
#
#   Although the configuration file supports setting different permissions for
#   different users, currently only the default user is supported, and the
#   configuration of other users will be ignored.
#


# the refresh interval of the accessType configuration file in milliseconds
refreshInterval=1000

# match all files for root user and default module
root.default[0].include=glob:**
root.default[0].read=true
root.default[0].write=true
root.default[0].execute=true

# match iginx internal python files for default user and udf & transform module
default.transformer[0].include=glob:${env:IGINX_HOME}${sys:file.separator}udf_funcs${sys:file.separator}**.py
default.transformer[0].read=false
default.transformer[0].write=false
default.transformer[0].execute=true
default.udf[0].include=${default.transformer[0].include}
default.udf[0].read=${default.transformer[0].read}
default.udf[0].write=${default.transformer[0].write}
default.udf[0].execute=${default.transformer[0].execute}

# match iginx internal system files for default user and default module
default.default[0].include=glob:${env:IGINX_HOME}${sys:file.separator}**.{jar,properties,sh,bat}
default.default[0].read=false
default.default[0].write=false
default.default[0].execute=false

# match log files for default user and default module
default.default[1].include=glob:${sys:user.dir}${sys:file.separator}logs${sys:file.separator}*.{log,log.gz}
default.default[1].read=true
default.default[1].write=false
default.default[1].execute=false

# match all files for default user and module
default.default[2].include=glob:**
default.default[2].read=true
default.default[2].write=true
default.default[2].execute=true
