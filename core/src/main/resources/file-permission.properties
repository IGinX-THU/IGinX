# This file is used to configure the accessType of the files in IGinX.
#
#
# Configuration format:
# =====================
#
# Note:
#
#   1. If there is conflict between key, the first one will be used.
#   2. Charset should be UTF-8.
#   3. The configuration file is in the format of `properties`.
#   4. The key-value pair is separated by `=`.
#   5. The file is case-sensitive.
#
# Variable:
#
#   The value of the key can contain variables, which will be replaced by the
#   real value. Including:
#
#   * `${<name>}`: get the value of this configuration file.
#   * `${env:<name>}`: get the value of the environment variable.
#   * `${sys:<name>}`: get the value of the system property.
#
#   more details:
#     https://commons.apache.org/proper/commons-configuration/userguide/howto_basicfeatures.html#Variable_Interpolation
#
#
# Refresh Interval:
# =================
#
#   IGinX will refresh the accessType configuration file at a regular interval.
#   The refresh interval can be configured by the `refreshInterval` key.
#   The value is the interval in milliseconds. The default value is 5000.
#
#
# File access rule:
# =================
#
#   The file accessType rule is used to configure the accessType of the files
#   in IGinX. The rule can be configured to allow or deny the file to be
#   read/write/execute. The rule can be applied to the specific user and module.
#
# Rule Format:
#
#   The rule is represented by 4 configuration items with the same prefix:
#
#     <user>.<ruleName>.include = <pathPattern>
#     <user>.<ruleName>.read = true/false
#     <user>.<ruleName>.write = true/false
#     <user>.<ruleName>.execute = true/false
#
#   where:
#     * `<user>` is the user name that the rule applies to. Specific users:
#       + `default` means the default user.
#         - All users first match the rules of specific users, if no match,
#           then match the rules of the default user.
#       + `root` means the root user.
#     * `<ruleName>` is the name of the rule.
#       + The name of the rule is used to distinguish different rules.
#     * `include` means the file path pattern that the rule applies to.
#       + this property is required.
#     * `read/write/execute` means whether file can be read/written/executed.
#       + this property is optional.
#       + if read not set, the rule will be ignored when checking the read.
#         Write and execute are the same.
#     * `<pathPattern>` is the pattern of the absolute file path. It can be:
#       - `glob:<pattern>`: matches the file path with the glob pattern.
#       - `regex:<pattern>`: matches the file path with the regex pattern.
#       more details:
#         https://docs.oracle.com/javase/8/docs/api/java/nio/file/FileSystem.html#getPathMatcher-java.lang.String-
#
# Rule Name:
#
#  The rule name can be any string, but it should be unique for the same user.
#  The rule name is used to distinguish different rules. Different modules
#  determine the subset of rules used by filter. In details:
#
#    * the default module uses rules starting with "default".
#      + the rules of the default module is applied to all modules.
#    * the udf module uses rules starting with "udf"
#    * the transform module uses rules starting with "transformer".
#    * the filesystem driver uses rules starting with "filesystem".
#
# Rule Application Order:
#   1. For the same user, the rules are applied in the order of the configuration
#      file. The first rule that matches the file path will be used to determine
#      whether the file can be read/written/executed.
#   2. If there is no read/write/execute for specific file when checking the rule,
#      try to apply the next rule.
#   3. If there is no rule that matches the file path, the default user will
#      be used.
#   4. If there is no rule that matches the file path for the default user, the
#      default accessType will be used. Default accessType is `true`.
#
# Example:
#
#     root.defaultRule.include=glob:**
#     root.defaultRule.read=true
#     root.defaultRule.write=true
#     root.defaultRule.execute=true
#
#     default.defaultRule.include=glob:**.parquet
#     default.defaultRule.read=true
#
#     default.defaultRule.include=glob:**
#     default.defaultRule.read=false
#     default.defaultRule.write=false
#     default.defaultRule.execute=false
#
#   in this example: all users can read all files. Only the root user can write
#   and execute all files. The other users only can read the parquet files.
#
#
# Important Note:
# ============
#
#   Only the default user is supported currently.
#   ---------------------------------------------
#
#   Although the configuration file supports setting different permissions for
#   different users, currently only the default user is supported, and the
#   configuration of other users will be ignored.
#

# the refresh interval of the accessType configuration file in milliseconds
refreshInterval=1000

# match all files for root user and default module
#root.defaultRule.include=glob:**
#root.defaultRule.read=true
#root.defaultRule.write=true
#root.defaultRule.execute=true

# match iginx internal python files for default user and udf & transform module
default.transformerRule.include=glob:${env:IGINX_HOME}${sys:file.separator}udf_funcs${sys:file.separator}**.py
default.transformerRule.read=false
default.transformerRule.write=true
default.transformerRule.execute=true
default.udfTheRule.include=${default.transformerRule.include}
default.udfTheRule.read=${default.transformerRule.read}
default.udfTheRule.write=${default.transformerRule.write}
default.udfTheRule.execute=${default.transformerRule.execute}

# match iginx internal system files for default user and default module
default.defaultFirstRule.include=glob:${env:IGINX_HOME}${sys:file.separator}**.{jar,properties,sh,bat}
default.defaultFirstRule.read=false
default.defaultFirstRule.write=false
default.defaultFirstRule.execute=false

# match log files for default user and default module
default.default2ndRule.include=glob:${sys:user.dir}${sys:file.separator}logs${sys:file.separator}*.{log,log.gz}
default.default2ndRule.read=true
default.default2ndRule.write=false
default.default2ndRule.execute=false

# match all files for default user and module
default.defaultLastRule.include=glob:**
default.defaultLastRule.read=true
default.defaultLastRule.write=true
default.defaultLastRule.execute=true
