####################
### 基本配置
####################
# iginx 绑定的 ip
ip=0.0.0.0

# iginx 绑定的端口
port=6888

# iginx 本身的用户名
username=root

# iginx 本身的密码
password=root

# 时序数据库列表，使用','分隔不同实例
#storageEngineList=127.0.0.1#6667#iotdb12#username=root#password=root#sessionPoolSize=50#has_data=false#is_read_only=false
storageEngineList=127.0.0.1#6667#iotdb12#username=root#password=root#sessionPoolSize=150#has_data=false#is_read_only=false,127.0.0.1#6668#iotdb12#username=root#password=root#sessionPoolSize=150#has_data=false#is_read_only=false

# 写入的副本个数
replicaNum=1

# 底层数据库类名
databaseClassNames=iotdb12=cn.edu.tsinghua.iginx.iotdb.IoTDBStorage,influxdb=cn.edu.tsinghua.iginx.influxdb.InfluxDBStorage,parquet=cn.edu.tsinghua.iginx.parquet.ParquetStorage

# 内存任务执行线程池
memoryTaskThreadPoolSize=400

# 每个存储节点对应的工作线程数
physicalTaskThreadPoolSizePerStorage=150

# 每个存储节点任务最大堆积数
maxCachedPhysicalTaskPerStorage=500

# 逻辑层优化策略
queryOptimizer=remove_not,filter_fragment

# 约束
constraintChecker=naive

# 物理层优化策略
physicalOptimizer=naive

# 分片策略
policyClassName=cn.edu.tsinghua.iginx.policy.naive.NaivePolicy
#policyClassName=cn.edu.tsinghua.iginx.policy.simple.SimplePolicy

#统计信息收集类
# statisticsCollectorClassName=cn.edu.tsinghua.iginx.statistics.StatisticsCollector

# 统计信息打印间隔，单位毫秒
# statisticsLogInterval=5000

# 重分片时，新分片的结束时间多加的间距，单位为秒
reshardFragmentTimeMargin=60

# parquet是否为本地存储
isLocalParquetStorage=true

# thrift线程池最小线程数量
minThriftWorkerThreadNum = 20

# thrift线程池最大线程数量
maxThriftWrokerThreadNum = 2147483647;

####################
### Migration 相关配置
####################

# 迁移时，每次迁移数据行数
migrationBatchSize=100

# 按序列维度切分分片时，每次最多分成多少片
maxReshardFragmentsNum=3

# 按序列维度切分分片时，时间序列负载高于平均值的最大差值倍数
maxTimeseriesLoadBalanceThreshold=2

# 迁移策略类名
#migrationPolicyClassName=cn.edu.tsinghua.iginx.migration.SimulationBasedMigrationPolicy
migrationPolicyClassName=cn.edu.tsinghua.iginx.migration.GreedyMigrationPolicy

####################
### 元数据配置
####################

# 目前支持 zookeeper, etcd
# 文件是默认的存储后端，方便部署
metaStorage=zookeeper

# 如果使用 zookeeper 作为元数据存储后端，需要提供
zookeeperConnectionString=127.0.0.1:2181

# 如果使用 etcd 作为元数据存储后端，需要提供，如果有多个 etcd 实例，以逗号分隔
#etcdEndpoints=http://localhost:2379

# 是否开启元数据内存管理
enable_meta_cache_control=false

# 分片缓存最大内存限制，单位为 KB，默认 128 MB
fragment_cache_threshold=131072

##########################
### 执行层配置
##########################

enablePushDown=false

useStreamExecutor=false

##########################
### 内存控制
##########################

enable_memory_control=false

system_resource_metrics=default

heap_memory_threshold=0.9

system_memory_threshold=0.9

system_cpu_threshold=0.9

####################
### REST 服务配置
####################

# rest 绑定的 ip
restIp=0.0.0.0

# rest 绑定的端口
restPort=6666

# 是否启用 rest 服务
enableRestService=false

# 乱序数据 margin, 单位是秒
disorderMargin=10

# rest 异步执行并发数
asyncRestThreadPool=100

##########################
### Python配置
##########################
# python脚本启动命令，建议使用"which python"查询出的绝对路径，如下所示
pythonCMD=/Library/Frameworks/Python.framework/Versions/3.7/bin/python3
#pythonCMD=/anaconda2/envs/pemja/bin/python3

# 是否初始化配置文件内指定的UDF/Transform
needInitBasicUDFFunctions=true

##########################
### Transform配置
##########################
# 流式执行时，每批数据的大小
batchSize=50
# Transform任务执行线程池
transformTaskThreadPoolSize=10
# Transform最大重试次数
transformMaxRetryTimes=3

####################
### MQTT 配置
####################

enable_mqtt=false

mqtt_host=0.0.0.0

mqtt_port=1883

mqtt_handler_pool_size=1

mqtt_payload_formatter=cn.edu.tsinghua.iginx.mqtt.JsonPayloadFormatter

mqtt_max_message_size=1048576

##########################
### SimplePolicy 策略配置
##########################

reAllocatePeriod=300000

enableStorageGroupValueLimit=true

storageGroupValueLimit=200.0

# 是否允许通过环境变量设置参数
enableEnvParameter=false

####################
### 长查询配置
####################

enableFaultTolerance=true

enableSharedStorage=false

sharedStorage=redis

shardStorageConnectionString=http://127.0.0.1:6379

faultTolerancePolicy=default

faultToleranceMaxCost=0.03

faultToleranceMaxPersistSize=64

##########################
### 容错相关
##########################

# 是否开启容错
enable_storage_heartbeat=false

# 存储节点心跳包间隔
storage_heartbeat_interval=5s

# 存储节点单个心跳包最大重试次数
storage_heartbeat_max_retry_times=2

# 存储节点心跳包超时时间
storage_heartbeat_timeout=1s

# 存储节点宕机后重连的时间间隔
storage_retry_connect_interval=30s

# 存储心跳包检测调度线程池大小
storage_heartbeat_threshold_pool_size=20

# 尝试重连概率
storage_restore_heartbeat_probability=0

migrationPoolSize=20

