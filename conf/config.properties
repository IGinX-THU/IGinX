####################
### 基本配置
####################
# iginx 绑定的 ip
ip=0.0.0.0

# iginx 绑定的端口
port=6888

# iginx 本身的用户名
username=root

# iginx 本身的密码
password=root

# 数据库列表，使用','分隔不同实例
storageEngineList=127.0.0.1#6667#iotdb12#username=root#password=root#sessionPoolSize=20#has_data=false#is_read_only=false
#storageEngineList=127.0.0.1#8086#influxdb#url=http://localhost:8086/#token=your-token#organization=your-organization#has_data=false
#storageEngineList=127.0.0.1#4242#opentsdb#url=http://127.0.0.1
#storageEngineList=127.0.0.1#5432#timescaledb#username=postgres#password=postgres
#storageEngineList=127.0.0.1#5432#postgresql#username=postgres#password=postgres#has_data=false
#storageEngineList=127.0.0.1#6667#parquet#dir=/path/to/your/parquet#dummy_dir=/path/to/your/data#iginx_port=6888#has_data=false#is_read_only=false#thrift_timeout=30000#thrift_pool_max_size=100#thrift_pool_min_evictable_idle_time_millis=600000#write_buffer_size=104857600#write_batch_size=1048576#flusher_permits=16#cache.capacity=1073741824#cache.timeout=PT1H#cache.soft_values=false#parquet.row_group_size=134217728#parquet.page_size=8192
#storageEngineList=127.0.0.1#27017#mongodb#has_data=false
#storageEngineList=127.0.0.1#6667#filesystem#dir=/path/to/your/filesystem#dummy_dir=/path/to/your/data#iginx_port=6888#chunk_size_in_bytes=1048576#memory_pool_size=100#has_data=false#is_read_only=false#thrift_timeout=5000#thrift_pool_max_size=100#thrift_pool_min_evictable_idle_time_millis=600000
#storageEngineList=127.0.0.1#6379#redis#has_data=false#is_read_only=false#timeout=5000

# UDF定义文件夹存储路径（相对或绝对），文件夹内的文件需要按以下格式进行编写
# %defaultUDFDir%
#   |- udf_list         (udf函数列表及元信息文件)
#   |- python_scripts/   (python脚本文件夹)
#       |- xxx.py       (python脚本)
defaultUDFDir=udf_funcs

# 写入的副本个数
replicaNum=0

# 底层数据库类名
databaseClassNames=iotdb12=cn.edu.tsinghua.iginx.iotdb.IoTDBStorage,influxdb=cn.edu.tsinghua.iginx.influxdb.InfluxDBStorage,parquet=cn.edu.tsinghua.iginx.parquet.ParquetStorage,postgresql=cn.edu.tsinghua.iginx.postgresql.PostgreSQLStorage,mongodb=cn.edu.tsinghua.iginx.mongodb.MongoDBStorage,redis=cn.edu.tsinghua.iginx.redis.RedisStorage,filesystem=cn.edu.tsinghua.iginx.filesystem.FileSystemStorage
#,opentsdb=cn.edu.tsinghua.iginx.opentsdb.OpenTSDBStorage,timescaledb=cn.edu.tsinghua.iginx.timescaledb.TimescaleDBStorage

# 内存任务执行线程池
memoryTaskThreadPoolSize=200

# 每个存储节点对应的工作线程数
physicalTaskThreadPoolSizePerStorage=100

# 每个存储节点任务最大堆积数
maxCachedPhysicalTaskPerStorage=500

# 逻辑层优化策略
queryOptimizer=rbo

# 优化器规则
ruleBasedOptimizer=RemoveNotRule=on,FilterFragmentRule=on

# ParallelFilter触发行数
parallelFilterThreshold=10000
# ParallelGroupBy触发行数
parallelGroupByRowsThreshold=10000
# ParallelApplyFunc触发分组数
parallelApplyFuncGroupsThreshold=1000
# ParallelGroupBy线程池大小
parallelGroupByPoolSize=5
# ParallelGroupBy线程池数量
parallelGroupByPoolNum=5
# ParallelGroupBy线程池数量
streamParallelGroupByWorkerNum=5

# 约束
constraintChecker=naive

# 物理层优化策略
physicalOptimizer=naive

# 分片策略
policyClassName=cn.edu.tsinghua.iginx.policy.naive.NaivePolicy
#policyClassName=cn.edu.tsinghua.iginx.policy.simple.SimplePolicy

#统计信息收集类
# statisticsCollectorClassName=cn.edu.tsinghua.iginx.statistics.StatisticsCollector

# 统计信息打印间隔，单位毫秒
# statisticsLogInterval=5000

# 重分片时，新分片的结束时间多加的间距，单位为秒
reshardFragmentTimeMargin=60

# thrift线程池最小线程数量
minThriftWorkerThreadNum = 20

# thrift线程池最大线程数量
maxThriftWrokerThreadNum = 2147483647

# 当前是否是UT测试环境
utTestEnv = false

####################
### Migration 相关配置
####################

# 迁移时，每次迁移数据行数
migrationBatchSize=100

# 按序列维度切分分片时，每次最多分成多少片
maxReshardFragmentsNum=3

# 按序列维度切分分片时，时间序列负载高于平均值的最大差值倍数
maxTimeseriesLoadBalanceThreshold=2

# 迁移策略类名
#migrationPolicyClassName=cn.edu.tsinghua.iginx.migration.SimulationBasedMigrationPolicy
migrationPolicyClassName=cn.edu.tsinghua.iginx.migration.GreedyMigrationPolicy

##########################
### 分片清理配置
##########################

# 是否开启监控系统
enableMonitor=false

# 监控系统判断间隔时间（单位: s）
loadBalanceCheckInterval=3

# 是否开启分片清理
enableFragmentCompaction=false

# 分片合并的写入负载阈值（小于该阈值的分片将被删除或合并）
fragmentCompactionWriteThreshold=1000

# 分片合并的查询负载阈值（小于该阈值的分片将被合并）
fragmentCompactionReadThreshold=1000

# 分片合并的查询负载阈值比例（小于该阈值的分片将被合并）
fragmentCompactionReadRatioThreshold=0.1

####################
### 元数据配置
####################

# 目前支持 zookeeper, etcd
# 文件是默认的存储后端，方便部署
metaStorage=zookeeper

# 如果使用 zookeeper 作为元数据存储后端，需要提供
zookeeperConnectionString=127.0.0.1:2181

# 如果使用 etcd 作为元数据存储后端，需要提供，如果有多个 etcd 实例，以逗号分隔
#etcdEndpoints=http://localhost:2379

# 是否开启元数据内存管理
enableMetaCacheControl=false

# 分片缓存最大内存限制，单位为 KB，默认 128 MB
fragmentCacheThreshold=131072

##########################
### 执行层配置
##########################

enablePushDown=false

useStreamExecutor=false

##########################
### 内存控制
##########################

enableMemoryControl=false

systemResourceMetrics=default

heapMemoryThreshold=0.9

systemMemoryThreshold=0.9

systemCpuThreshold=0.9

####################
### REST 服务配置
####################

# rest 绑定的 ip
restIp=0.0.0.0

# rest 绑定的端口
restPort=6666

# 是否启用 rest 服务
enableRestService=true

# 乱序数据 margin, 单位是秒
disorderMargin=10

# rest 异步执行并发数
asyncRestThreadPool=100

##########################
### Python配置
##########################
# python脚本启动命令，建议使用"which python"查询出的绝对路径，如下所示
#pythonCMD=/Library/Frameworks/Python.framework/Versions/3.7/bin/python3
pythonCMD=python3

# 是否初始化配置文件内指定的UDF/Transform
needInitBasicUDFFunctions=false

##########################
### Transform配置
##########################
# 流式执行时，每批数据的大小
batchSize=50
# Transform任务执行线程池
transformTaskThreadPoolSize=10
# Transform最大重试次数
transformMaxRetryTimes=3

####################
### MQTT 配置
####################

enableMqtt=false

mqttHost=0.0.0.0

mqttPort=1883

mqttHandlerPoolSize=1

mqttPayloadFormatter=cn.edu.tsinghua.iginx.mqtt.JsonPayloadFormatter

mqttMaxMessageSize=1048576

##########################
### SimplePolicy 策略配置
##########################

reAllocatePeriod=300000

enableStorageGroupValueLimit=true

storageGroupValueLimit=200.0

# 是否允许通过环境变量设置参数
enableEnvParameter=false

#################
### 文件读写配置
#################

# 读取csv文件时，每批数据的行数
batchSizeImportCsv=10000
